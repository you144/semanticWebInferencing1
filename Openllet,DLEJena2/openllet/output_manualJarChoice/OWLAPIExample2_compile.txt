openllet\examples\OWLAPIExample2.java:29: error: cannot access Provider
				OWLManager.createConcurrentOWLOntologyManager()//
				          ^
  class file for com.google.inject.Provider not found
openllet\examples\OWLAPIExample2.java:74: error: incompatible types: OWLReasoner cannot be converted to OpenlletReasoner
		final OpenlletReasoner r = h.getReasoner();
		                                        ^
openllet\examples\OWLAPIExample2.java:79: error: method getTypes in interface OWLReasoner cannot be applied to given types;
		r.getTypes(i).entities().forEach(System.out::println);
		 ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:83: error: method getTypes in interface OWLReasoner cannot be applied to given types;
		r.getTypes(j).entities().forEach(System.out::println);
		 ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:87: error: method getTypes in interface OWLReasoner cannot be applied to given types;
		r.getTypes(k).entities().forEach(System.out::println);
		 ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:91: error: cannot find symbol
		r.getObjectPropertyValues(i, u).entities().forEach(System.out::println);
		                               ^
  symbol:   method entities()
  location: interface NodeSet<OWLNamedIndividual>
openllet\examples\OWLAPIExample2.java:95: error: method getInstances in interface OWLReasoner cannot be applied to given types;
		r.getInstances(OWL.not(e)).entities().forEach(System.out::println);
		 ^
  required: OWLClassExpression,boolean
  found: OWLObjectComplementOf
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:99: error: method getTypes in interface OWLReasoner cannot be applied to given types;
				r.getTypes(j).entities()//
				 ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:105: error: method getTypes in interface OWLReasoner cannot be applied to given types;
		h.getReasoner().getTypes(i).entities().forEach(System.out::println);
		               ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:108: error: cannot find symbol
		h.getOntology().axioms().map(OWLAxiom::toString).distinct().sorted().forEach(System.out::println);
		               ^
  symbol:   method axioms()
  location: interface OWLOntology
openllet\examples\OWLAPIExample2.java:108: error: invalid method reference
		h.getOntology().axioms().map(OWLAxiom::toString).distinct().sorted().forEach(System.out::println);
		                             ^
  non-static method toString() cannot be referenced from a static context
openllet\examples\OWLAPIExample2.java:113: error: method getTypes in interface OWLReasoner cannot be applied to given types;
		h.getReasoner().getTypes(l).entities().forEach(System.out::println);
		               ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:117: error: method getTypes in interface OWLReasoner cannot be applied to given types;
				r.getTypes(l).entities()//
				 ^
  required: OWLNamedIndividual,boolean
  found: OWLNamedIndividual
  reason: actual and formal argument lists differ in length
openllet\examples\OWLAPIExample2.java:123: error: cannot find symbol
		h.getOntology().axioms().map(OWLAxiom::toString).distinct().sorted().forEach(System.out::println);
		               ^
  symbol:   method axioms()
  location: interface OWLOntology
openllet\examples\OWLAPIExample2.java:123: error: invalid method reference
		h.getOntology().axioms().map(OWLAxiom::toString).distinct().sorted().forEach(System.out::println);
		                             ^
  non-static method toString() cannot be referenced from a static context
15 errors
