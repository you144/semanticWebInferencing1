ABox entailment rules:
[ eq-sym: (?A owl:sameAs ?B) -> (?B owl:sameAs ?A) ]
[ eq-trans: (?A owl:sameAs ?B) (?B owl:sameAs ?C) -> (?A owl:sameAs ?C) ]
[ eq-rep-s: (?X owl:sameAs ?Y) notEqual(?X ?Y) (?X ?P ?V) -> (?Y ?P ?V) ]
[ eq-rep-o: (?X owl:sameAs ?Y) notEqual(?X ?Y) (?V ?P ?X) -> (?V ?P ?Y) ]
[ eq-all: (?X rdf:type owl:Thing) -> (?X owl:sameAs ?X) ]
[ cls-oo: (?C owl:oneOf ?l) -> listMapAsSubject(?l rdf:type ?C) ]
[ distinct: (?w owl:distinctMembers ?L) -> assertDisjointPairs(?L) ]
[ eq-diff1: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:differentFrom ?Y) (?X owl:sameAs ?Y) -> (?X rb:violation 'error('conflict' 'Two individuals both same and different, may be due to disjoint classes or functional properties' ?Y)'^^urn:x-hp-jena:Functor) ]
[ validationIndiv3: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of Nothing' ?I)'^^urn:x-hp-jena:Functor) ]
[ D_cls-com: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X rdf:type owl:Thing) (?X rdf:type owl:Nothing) -> (?X rb:violation 'error('inconsistency' 'Complement classes' owl:Thing owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_cls-com: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X rdf:type owl:Nothing) (?X rdf:type owl:Thing) -> (?X rb:violation 'error('inconsistency' 'Complement classes' owl:Nothing owl:Thing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-sco: (?X rdf:type http://example.org/relatives#Person) -> (?X rdf:type owl:Thing) ]
[ D_cax-sco: (?X rdf:type owl:Nothing) -> (?X rdf:type owl:Thing) ]
[ D_cax-sco: (?X rdf:type owl:Nothing) -> (?X rdf:type http://example.org/relatives#Person) ]
[ D_cax-sco: (?X rdf:type owl:Nothing) -> (?X rdf:type http://example.org/relatives#Child) ]
[ D_cax-sco: (?X rdf:type owl:Nothing) -> (?X rdf:type http://example.org/relatives#Parent) ]
[ D_cax-sco: (?X rdf:type http://example.org/relatives#Child) -> (?X rdf:type owl:Thing) ]
[ D_cax-sco: (?X rdf:type http://example.org/relatives#Child) -> (?X rdf:type http://example.org/relatives#Person) ]
[ D_cax-sco: (?X rdf:type http://example.org/relatives#Parent) -> (?X rdf:type owl:Thing) ]
[ D_cax-sco: (?X rdf:type http://example.org/relatives#Parent) -> (?X rdf:type http://example.org/relatives#Person) ]
[ D_spo1: (?X owl:bottomObjectProperty ?Y) -> (?X http://example.org/relatives#hasGrandparent ?Y) ]
[ D_spo1: (?X owl:bottomObjectProperty ?Y) -> (?X http://example.org/relatives#hasChild ?Y) ]
[ D_spo1: (?X owl:bottomObjectProperty ?Y) -> (?X http://example.org/relatives#hasParent ?Y) ]
[ D_spo1: (?X owl:bottomObjectProperty ?Y) -> (?X owl:topObjectProperty ?Y) ]
[ D_spo1: (?X http://example.org/relatives#hasGrandparent ?Y) -> (?X owl:topObjectProperty ?Y) ]
[ D_spo1: (?X http://example.org/relatives#hasChild ?Y) -> (?X owl:topObjectProperty ?Y) ]
[ D_spo1: (?X http://example.org/relatives#hasParent ?Y) -> (?X owl:topObjectProperty ?Y) ]
[ D_spo1: (?X owl:bottomDataProperty ?Y) -> (?X owl:topDataProperty ?Y) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) (?Y owl:bottomObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomObjectProperty owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) (?Y http://example.org/relatives#hasGrandparent ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomObjectProperty http://example.org/relatives#hasGrandparent)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) (?Y http://example.org/relatives#hasChild ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomObjectProperty http://example.org/relatives#hasChild)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) (?Y http://example.org/relatives#hasParent ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomObjectProperty http://example.org/relatives#hasParent)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) (?Y owl:topObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomObjectProperty owl:topObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X http://example.org/relatives#hasGrandparent ?Y) (?Y owl:bottomObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X http://example.org/relatives#hasGrandparent owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X http://example.org/relatives#hasChild ?Y) (?Y owl:bottomObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X http://example.org/relatives#hasChild owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X http://example.org/relatives#hasParent ?Y) (?Y owl:bottomObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X http://example.org/relatives#hasParent owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:topDataProperty ?Y) (?Y owl:bottomDataProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:topDataProperty owl:bottomDataProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomDataProperty ?Y) (?Y owl:topDataProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomDataProperty owl:topDataProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomDataProperty ?Y) (?Y owl:bottomDataProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:bottomDataProperty owl:bottomDataProperty)'^^urn:x-hp-jena:Functor) ]
[ D_pdw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:topObjectProperty ?Y) (?Y owl:bottomObjectProperty ?X) -> (?X rb:violation 'error('disjoint property violation' 'The properties are disjoint' ?X owl:topObjectProperty owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_prp-inv1: (?X http://example.org/relatives#hasChild ?Y) -> (?Y http://example.org/relatives#hasParent ?X) ]
[ D_prp-inv1: (?X http://example.org/relatives#hasParent ?Y) -> (?Y http://example.org/relatives#hasChild ?X) ]
[ D_prp-irp: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?X owl:bottomObjectProperty ?Y) equal(?X ?Y) -> (?X rb:violation 'error('irreflexive violation' 'The property is irreflexive' ?X owl:bottomObjectProperty)'^^urn:x-hp-jena:Functor) ]
[ D_prp-trp: (?X owl:bottomObjectProperty ?Y) (?Y owl:bottomObjectProperty ?Z) -> (?X owl:bottomObjectProperty ?Z) ]
[ D_prp-trp: (?X owl:topObjectProperty ?Y) (?Y owl:topObjectProperty ?Z) -> (?X owl:topObjectProperty ?Z) ]
[ D_prp-ifp: (?A owl:bottomObjectProperty ?B) (?C owl:bottomObjectProperty ?B) notEqual(?A ?C) -> (?A owl:sameAs ?C) ]
[ D_prp-fp: (?A owl:bottomObjectProperty ?B) notLiteral(?B) (?A owl:bottomObjectProperty ?C) notLiteral(?C) notEqual(?B ?C) -> (?B owl:sameAs ?C) ]
[ D_prp-fp: (?A owl:bottomDataProperty ?B) notLiteral(?B) (?A owl:bottomDataProperty ?C) notLiteral(?C) notEqual(?B ?C) -> (?B owl:sameAs ?C) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Thing) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Thing owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type http://example.org/relatives#Person) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' http://example.org/relatives#Person owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) (?I rdf:type owl:Thing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Nothing owl:Thing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) (?I rdf:type http://example.org/relatives#Person) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Nothing http://example.org/relatives#Person)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Nothing owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) (?I rdf:type http://example.org/relatives#Child) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Nothing http://example.org/relatives#Child)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type owl:Nothing) (?I rdf:type http://example.org/relatives#Parent) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' owl:Nothing http://example.org/relatives#Parent)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type http://example.org/relatives#Child) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' http://example.org/relatives#Child owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_cax-dw: (?v rb:validation 'on()'^^urn:x-hp-jena:Functor) (?I rdf:type http://example.org/relatives#Parent) (?I rdf:type owl:Nothing) -> (?I rb:violation 'error('conflict' 'Individual a member of disjoint classes' http://example.org/relatives#Parent owl:Nothing)'^^urn:x-hp-jena:Functor) ]
[ D_prp-spo2: (?u1 http://example.org/relatives#hasParent ?u2) (?u2 http://example.org/relatives#hasParent ?u3) -> (?u1 owl:topObjectProperty ?u3) ]
[ D_prp-spo2: (?u1 http://example.org/relatives#hasParent ?u2) (?u2 http://example.org/relatives#hasParent ?u3) -> (?u1 http://example.org/relatives#hasGrandparent ?u3) ]

Bill hasChild Bob
